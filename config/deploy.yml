# Name of your application. Used to uniquely configure containers.
service: url-shortener

# Name of the container image.
image: khanhhq2k/url-shortener

# Deploy to these servers.
servers:
  web:
    hosts:
      - 149.28.144.40

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  username: khanhhq2k

  # Always use an access token rather than real password when possible.
  password:
    - KAMAL_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .env).
# Remember to run `kamal env push` after making changes!
env:
  clear:
    DB_HOST: 139.180.153.87
    POSTGRES_USER: url_shortener
  secret:
    - RAILS_MASTER_KEY
    - POSTGRES_PASSWORD
    - URL_SHORTENER_DATABASE_PASSWORD

# Use a different ssh user than root
# ssh:
#   user: app

# Configure builder setup.
# builder:
#   args:
#     RUBY_VERSION: 3.2.0
#   secrets:
#     - GITHUB_TOKEN
#   remote:
#     arch: amd64
#     host: ssh://app@192.168.0.1

#comment out this remote builder config if running on local machine
# builder:
#   remote:
#     arch: amd64
#     host: ssh://root@37.27.22.16

# Use accessory services (secrets come from .env).
accessories:
  db:
    image: postgres:15
    host: 139.180.153.87
    port: 5432
    env:
      clear:
        POSTGRES_USER: url_shortener
        POSTGRES_DB: url_shortener_production
      secret:
        - POSTGRES_PASSWORD
        - URL_SHORTENER_DATABASE_PASSWORD
    files:
      # - config/mysql/production.cnf:/etc/mysql/my.cnf
      - db/production.sql:/docker-entrypoint-initdb.d/setup.sql
    directories:
      - data:/var/lib/postgresql/data
#   redis:
#     image: redis:7.0
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data

# Configure custom arguments for Traefik
# traefik:
#   options:
#     publish:
#       - "443:443"
#     volume:
#       - "/letsencrypt/acme.json:/letsencrypt/acme.json"
#   args:
#     entryPoints.web.address: ":80"
#     entryPoints.websecure.address: ":443"
#     certificatesResolvers.letsencrypt.acme.email: "khanhhq2k@gmail.com"
#     certificatesResolvers.letsencrypt.acme.storage: "/letsencrypt/acme.json"
#     certificatesResolvers.letsencrypt.acme.httpchallenge: true
#     certificatesResolvers.letsencrypt.acme.httpchallenge.entrypoint: web


# Configure a custom healthcheck (default is /up on port 3000)
# healthcheck:
#   path: /healthz
#   port: 4000

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
# asset_path: /rails/public/assets

# Configure rolling deploys by setting a wait time between batches of restarts.
# boot:
#   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
#   wait: 2
